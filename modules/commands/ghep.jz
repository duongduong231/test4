module.exports.config = {
  name: "ghep",
  version: "1.0.0",
  hasPermssion: 0,
  credits: "banledangyeuu",
  description: "Gh√©p ƒë√¥i v·ªõi 1 ƒë·ª©a trong nh√≥m",
  commandCategory: "Group",
  usages: "ghep",
  cooldowns: 1,
  dependencies: ["axios", "fs-extra"],
  envConfig: {
       cooldownTime: 600000,
  }
};
module.exports.run = async function({ api, event, args, Users,__GLOBAL,Currencies }) {
  const axios = require("axios");
  const fs = require("fs-extra");
  const { threadID, messageID } = event;
  const cooldown = __GLOBAL.ghep.cooldownTime;
  const data = (await Currencies.getData(event.senderID)).ghepTime;
  if (typeof data !== "undefined" && cooldown - (Date.now() - data) > 0) {
      var time = cooldown - (Date.now() - data),
          minutes = Math.floor(time / 60000),
          seconds = ((time % 60000) / 1000).toFixed(0);       
    return api.sendMessage(`B·∫°n ƒëang trong th·ªùi gian ch·ªù\nVui l√≤ng th·ª≠ l·∫°i sau: ${minutes} ph√∫t ${(seconds < 10 ? "0" : "")}${seconds} gi√¢y!`, event.threadID, event.messageID);
  }
  else {
  var mention = Object.keys(event.mentions)[0];
  var emoji = ["‚ô•Ô∏è","‚ù§Ô∏è","üíõ","üíö","üíô","üíú","üñ§","üíñ","üíù","üíì","üíò","üíç","üéÅ","üíã","üíé","üí†","üåà","üåç","üåï","‚òÄÔ∏è"]
  var random_emoji = emoji[Math.floor(Math.random() * emoji.length)];
  if (!mention) {
    let threadInfo = await api.getThreadInfo(event.threadID);
    let all = threadInfo.participantIDs;
    await all.splice(all.indexOf(api.getCurrentUserID()), 1);
    await all.splice(all.indexOf(event.senderID), 1);
    var random = all[Math.floor(Math.random() * all.length)];
    let data = await api.getUserInfo(parseInt(random));
    let dt = await api.getUserInfo(event.senderID);
    let Avatar = (await axios.get( `https://le31.glitch.me/avt?q=${random}`, { responseType: "arraybuffer" } )).data;
    fs.writeFileSync( __dirname + "/cache/avt.png", Buffer.from(Avatar, "utf-8") );
    let name_1 = dt[event.senderID].name;
    let name_2 = data[parseInt(random)].name;
    if (name_2 == undefined) {
      api.changeNickname( `${ dt[event.senderID].gender == 1 ? "V·ª£ c·ªßa" : dt[event.senderID].gender == 2 ? "Ch·ªìng c·ªßa" : "B√™ƒê√™ c·ªßa" } ${name_1} ${random_emoji}`, event.threadID, parseInt(random) );
      api.changeNickname( `${ data[parseInt(random)].gender == 1 ? "V·ª£ c·ªßa" : data[random].gender == 2 ? "Ch·ªìng c·ªßa" : "B√™ƒê√™ c·ªßa" } 1 ng∆∞·ªùi ch∆∞a bi·∫øt t√™n ${random_emoji}`, event.threadID,async () => await Currencies.setData(event.senderID, { ghepTime: Date.now() }),  event.senderID );
  } else {
      api.changeNickname( `${ dt[event.senderID].gender == 1 ? "V·ª£ c·ªßa" : dt[event.senderID].gender == 2 ? "Ch·ªìng c·ªßa" : "B√™ƒê√™ c·ªßa" } ${name_1} ${random_emoji}`, event.threadID, parseInt(random) );
      api.changeNickname( `${ data[parseInt(random)].gender == 1 ? "V·ª£ c·ªßa" : data[random].gender == 2 ? "Ch·ªìng c·ªßa" : "B√™ƒê√™ c·ªßa" } ${name_2} ${random_emoji}`, event.threadID, event.senderID );
      api.sendMessage( { body: `B·∫°n ƒë√£ ƒë∆∞·ª£c gh√©p ƒë√¥i ng·∫´u nhi√™n v·ªõi v·ªõi ${name_2}`, attachment: fs.createReadStream(__dirname + `/cache/avt.png`), mentions: [{ tag: name_2, id: random }] }, event.threadID, async () => await Currencies.setData(event.senderID, { ghepTime: Date.now() }));
     	}
  } else {
    let data = await api.getUserInfo(mention);
    let dt = await api.getUserInfo(event.senderID);
    let Avatar = (await axios.get( `https://le31.glitch.me/avt?q=${mention}`, { responseType: "arraybuffer" } )).data;
    fs.writeFileSync( __dirname + "/cache/avt.png", Buffer.from(Avatar, "utf-8") );
    let name_1 = dt[event.senderID].name;
    let name_2 = data[mention].name;
    if (name_2 == undefined) {
      api.changeNickname( `${ dt[event.senderID].gender == 1 ? "V·ª£ c·ªßa" : dt[event.senderID].gender == 2 ? "Ch·ªìng c·ªßa" : "B√™ƒê√™ c·ªßa" } ${name_1} ${random_emoji}`, event.threadID, mention );
      api.changeNickname( `${ data[mention].gender == 1 ? "V·ª£ c·ªßa" : data[mention].gender == 2 ? "Ch·ªìng c·ªßa" : "B√™ƒê√™ c·ªßa" } 1 ng∆∞·ªùi ch∆∞a bi·∫øt t√™n ${random_emoji}`, event.threadID,async () => await Currencies.setData(event.senderID, { ghepTime: Date.now() }),  event.senderID );  
    } else {
      api.changeNickname( `${dt[event.senderID].gender == 1 ? "V·ª£ c·ªßa" : dt[event.senderID].gender == 2 ? "Ch·ªìng c·ªßa" : "B√™ƒê√™ c·ªßa" } ${name_1} ${random_emoji}`, event.threadID, mention );
      api.changeNickname( `${data[mention].gender == 1 ? "V·ª£ c·ªßa" : data[mention].gender == 2 ? "Ch·ªìng c·ªßa" : "B√™ƒê√™ c·ªßa" } ${name_2} ${random_emoji}`, event.threadID, event.senderID );
      api.sendMessage({
          body: `B·∫°n ƒë√£ gh√©p ƒë√¥i v·ªõi ${name_2}`,
          attachment: fs.createReadStream(__dirname + `/cache/avt.png`),
          mentions: [{ tag: name_2, id: random }]
        }, event.threadID,async () => await Currencies.setData(event.senderID, { ghepTime: Date.now() }));
    }
  }
    }
};